{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","people","setPeople","loading","setLoading","showMore","setShowMore","fetchPeople","a","fetch","response","json","console","log","useEffect","className","map","item","person","rank","source","personName","finalWorth","industries","squareImage","countryOfCitizenship","bios","onClick","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAqFeA,MA5Ef,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MARf,oEAOU,cACZC,EADY,gBAEGA,EAASC,OAFZ,OAEZV,EAFY,OAGlBC,EAAUD,GACVG,GAAW,GACXQ,QAAQC,IAAIZ,GALM,2CAAH,qDAYjB,OAJAa,qBAAU,WACRP,MACA,IAECJ,EAEC,yCAMF,mCACE,wBAAOY,UAAU,gBAAjB,UAEU,gCACE,+BACE,sCACA,sCACA,2CACA,qDACA,wCACA,+CAKbd,EAAOe,KAAI,SAACC,GAC+FA,EAAnGC,OAAP,IAAeC,EAA2FF,EAA3FE,KAAMC,EAAqFH,EAArFG,OAAOC,EAA8EJ,EAA9EI,WAAWC,EAAmEL,EAAnEK,WAAYC,EAAuDN,EAAvDM,WAAYC,EAA2CP,EAA3CO,YAAaC,EAA8BR,EAA9BQ,qBAAsBC,EAAQT,EAARS,KAClG,OACE,qCAEM,gCACE,+BACE,+BAAKP,EAAL,OACA,6BAAKE,IACL,mCAAMC,EAAN,QACA,6BAAKG,IACL,6BAAKL,IACL,6BAAKG,IACL,6BAAI,wBAAQI,QAAS,kBAAIrB,GAAaD,IAAlC,wBAKPA,GACD,oCACE,qBAAKuB,IAAKJ,EAAaK,IAAI,KAC3B,6BAAKH,mBC1DRI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c946247.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css'\n\nimport {IoIosArrowDown} from \"react-icons/io\";\nimport {IoIosArrowUp} from \"react-icons/io\";\n\n\nconst url = 'https://forbes400.herokuapp.com/api/forbes400/getAllBillionaires';\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true)\n  const [showMore, setShowMore] = useState(false)\n\n  const fetchPeople = async () => {\n    const response = await fetch(url)\n    const people = await response.json()\n    setPeople(people);\n    setLoading(false)\n    console.log(people)\n  }\n\n  useEffect(()=>{\n    fetchPeople();\n  },[]);\n\n  if(loading){\n    return(\n      <h2>loading</h2>\n    )\n  }\n\n  return (\n\n    <>\n      <table className='forbes__table'>\n\n                <thead>\n                  <tr>\n                    <th>RANK</th>\n                    <th>NAME</th>\n                    <th>NET WORTH</th>\n                    <th>COUNTRY / TERRITORY</th>\n                    <th>SOURCE</th>\n                    <th>INDUSTRY</th>\n                  </tr>\n                </thead>\n                \n\n      {people.map((item)=>{\n        const {person, rank, source,personName,finalWorth, industries, squareImage, countryOfCitizenship, bios} = item\n        return(\n          <>\n            \n                <tbody>\n                  <tr>\n                    <td>{rank}.</td>\n                    <td>{personName}</td>\n                    <td>${finalWorth} B</td>\n                    <td>{countryOfCitizenship}</td>\n                    <td>{source}</td>\n                    <td>{industries}</td>\n                    <td><button onClick={()=>setShowMore(!showMore)}>\n                          btn\n                      </button></td>\n                  </tr>\n                </tbody>\n                {showMore &&\n                <section>\n                  <img src={squareImage} alt=\"\" />\n                  <h3>{bios}</h3>\n                </section>\n                \n                }\n            \n          </>\n        )\n\n      })}\n      </table>\n    </>\n  )\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}